import { Directive, ElementRef, Input, HostListener, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var RippleDirective = /** @class */ (function () {
    function RippleDirective(el) {
        this.el = el;
        this.ngFyRipple = undefined;
        if (document.getElementById("ngFyRippleStyles") == null) {
            /** @type {?} */
            var style = document.createElement('style');
            style.id = "ngFyRippleStyles";
            style.type = 'text/css';
            /** @type {?} */
            var keyFrames = "\n      *[ngfyripple],\n      *[ng-reflect-ng-fy-ripple] {\n        cursor: pointer;\n        position: relative;\n        overflow: hidden;\n      }\n      *[ngfyripple] *,\n      *[ng-reflect-ng-fy-ripple] * {\n        pointer-events: none;\n      }\n      *[ng-reflect-ng-fy-ripple] .ripple-div,\n      *[ngfyripple] .ripple-div {\n        position: absolute;\n        pointer-events: none;\n        border-radius: 50%;\n        background-color: rgba(0, 0, 0, 0.14);\n        z-index: 10;\n        animation: ngFyRipple 0.65s ease-out forwards;\n      }\n\n      *[ng-reflect-ng-fy-ripple] .ripple-div.ripple-remove,\n      *[ngfyripple] .ripple-div.ripple-remove {\n        animation: ngFyRippleRemove 0.3s ease-in forwards;\n      }\n      \n      @keyframes ngFyRipple {\n        0% {\n          opacity: 1;\n          transform: translate(-50%, -50%) scale(0.05);\n        }\n        100% {\n          opacity: 1;\n          transform: translate(-50%, -50%) scale(1);\n        }\n      }\n\n      @keyframes ngFyRippleRemove {\n        0% {\n          opacity: 1;\n          transform: translate(-50%, -50%) scale(1);\n        }\n        100% {\n          opacity: 0;\n          transform: translate(-50%, -50%) scale(1);\n        }\n      }\n      ";
            style.innerHTML = keyFrames.replace(/A_DYNAMIC_VALUE/g, "180deg");
            document.getElementsByTagName('head')[0].appendChild(style);
        }
    }
    /**
     * @return {?}
     */
    RippleDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @return {?}
     */
    RippleDirective.prototype.mousedown = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.ngFyRipple || (this.ngFyRipple != undefined && this.ngFyRipple.toString() == "")) {
            /** @type {?} */
            var child_1 = document.createElement('div');
            /** @type {?} */
            var weight = this.el.nativeElement.offsetHeight > this.el.nativeElement.offsetWidth ? this.el.nativeElement.offsetHeight : this.el.nativeElement.offsetWidth;
            /** @type {?} */
            var style = [
                "height:" + (weight * 2.4) + "px",
                "width:" + (weight * 2.4) + "px",
                "left:" + event.offsetX + "px",
                "top:" + event.offsetY + "px",
            ];
            child_1.style.cssText = style.join(";");
            child_1.classList.add('ripple-div');
            this.el.nativeElement.appendChild(child_1);
            setTimeout((/**
             * @return {?}
             */
            function () {
                child_1.classList.add("ripple-complated");
            }), 550);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    RippleDirective.prototype.mouseup = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _loop_1 = function (i) {
            /** @type {?} */
            var element = this_1.el.nativeElement.children[i];
            if (element.className.search("ripple-div") != -1 && element.className.search("ripple-remove") == -1) {
                if (element.className.search("ripple-complated") != -1) {
                    element.classList.add("ripple-remove");
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        element.parentNode.removeChild(element);
                    }), 350);
                }
                else {
                    /** @type {?} */
                    var checkInter_1 = setInterval((/**
                     * @return {?}
                     */
                    function () {
                        if (element.className.search("ripple-complated") != -1) {
                            element.classList.add("ripple-remove");
                            setTimeout((/**
                             * @return {?}
                             */
                            function () {
                                if (element != null && element.parentNode != null) {
                                    element.parentNode.removeChild(element);
                                }
                            }), 350);
                            clearInterval(checkInter_1);
                        }
                    }), 50);
                }
            }
        };
        var this_1 = this;
        for (var i = 0; i < this.el.nativeElement.children.length; i++) {
            _loop_1(i);
        }
    };
    RippleDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ngFyRipple]'
                },] }
    ];
    /** @nocollapse */
    RippleDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    RippleDirective.propDecorators = {
        ngFyRipple: [{ type: Input }],
        mousedown: [{ type: HostListener, args: ['mousedown', ['$event'],] }],
        mouseup: [{ type: HostListener, args: ['mouseup', ['$event'],] }]
    };
    return RippleDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgFyRippleModule = /** @class */ (function () {
    function NgFyRippleModule() {
    }
    NgFyRippleModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        RippleDirective
                    ],
                    imports: [],
                    exports: [
                        RippleDirective
                    ]
                },] }
    ];
    return NgFyRippleModule;
}());

export { NgFyRippleModule, RippleDirective as Éµa };
//# sourceMappingURL=ng-fy-ripple.js.map
